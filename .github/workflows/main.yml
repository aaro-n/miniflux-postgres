name: Docker 构建和发布

on:
  push:
    branches:
      - main
  schedule:
    - cron: "33 1 */7 * *"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 检出代码库
        uses: actions/checkout@v2

      - name: 获取 PostgreSQL 版本
        id: docker_version
        run: |
          docker pull postgres:15
          echo "::set-output name=version::$(docker run --rm postgres:15 postgres --version | awk '{print $3}')"

      - name: 读取版本号
        id: version
        run: echo "::set-output name=version::$(cat version)"

      - name: 检查是否需要构建 Docker 镜像
        id: check_build
        run: |
          if [[ "${{ steps.docker_version.outputs.version }}" != "${{ steps.version.outputs.version }}" ]]; then
            echo "::set-output name=build::true"
          else
            echo "::set-output name=build::false"
          fi

      - name: 写入版本号到文件
        if: steps.check_build.outputs.build == 'true'
        run: |
          echo "${{ steps.docker_version.outputs.version }}" > version.txt
          echo "version.txt" > .gitignore

      - name: 创建或更新版本文件
        if: steps.check_build.outputs.build == 'true'
        run: |
          echo "${{ steps.docker_version.outputs.version }}" > version

      - name: 登录到 Docker Hub
        if: steps.check_build.outputs.build == 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }} 

      - name: 设置 QEMU
        uses: docker/setup-qemu-action@v1

      - name: 设置 Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: 设置时间戳
        id: set-timestamp
        run: echo "::set-output name=timestamp::$(date +%Y%m%d%H%M%S)"

      - name: 构建并推送 Docker 镜像
        if: steps.check_build.outputs.build == 'true'
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/arm64,linux/amd64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/miniflux-postgres:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/miniflux-postgres:${{ steps.docker_version.outputs.version }}
            ${{ secrets.DOCKERHUB_USERNAME }}/miniflux-postgres:${{ steps.docker_version.outputs.version }}-${{ steps.set-timestamp.outputs.timestamp }}
            ${{ secrets.DOCKERHUB_USERNAME }}/miniflux-postgres:${{ env.DOCKER_VERSION_INT }}

      - name: 配置 Git 凭证
        run: |
          git config --global user.name "Your Name"
          git config --global user.email "your-email@example.com"

      - name: 提交并推送版本文件
        if: steps.check_build.outputs.build == 'true'
        run: |
          git add version
          git commit -m "Update version file"
          git push origin HEAD:main
