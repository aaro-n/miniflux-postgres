name: Docker Build and Publish

on:
  push:
    branches:
      - main

jobs:
  extract-version:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Extract version from file
        id: extract-version
        run: |
          CURRENT_VERSION=$(cat version.txt)
          echo "::set-output name=current_version::$CURRENT_VERSION"

      - name: Compare versions
        id: compare-versions
        run: |
          DOCKER_VERSION=$(docker run --rm postgres:15 postgres --version | awk '{print $3}')
          if [ "${{ steps.extract-version.outputs.current_version }}" = "$DOCKER_VERSION" ]; then
            echo "::set-output name=skip_build::true"
          else
            echo "::set-output name=skip_build::false"
          fi

      - name: Build and publish image
        if: steps.compare-versions.outputs.skip_build == 'false'
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          echo $DOCKERHUB_TOKEN | docker login -u $DOCKER_USERNAME --password-stdin
          docker build -t your-docker-image:latest .
          docker tag aaronlee/miniflux-postgres:latest aaronlee/miniflux-postgres:${{ github.sha }}
          docker tag aaronlee/miniflux-postgres:latest aaronlee/miniflux-postgres:${{ github.sha }}-$(date +%Y%m%d%H%M%S)
          docker push aaronlee/miniflux-postgres:latest
          docker push aaronlee/miniflux-postgres:${{ github.sha }}
          docker push aaronlee/miniflux-postgres:${{ github.sha }}-$(date +%Y%m%d%H%M%S)
